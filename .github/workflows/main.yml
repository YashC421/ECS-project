# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  AZURE_CONTAINER_REGISTRY: "javaproject"
  CONTAINER_NAME: "project"
  RESOURCE_GROUP: "NetworkWatcherRG"
  CLUSTER_NAME: "test-cluster"
 
  
  

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: war-file
        path: /home/runner/work/ECS-project/ECS-project/webapp/target/*.war
 
    - name: List build directory contents
      run: ls -la /home/runner/work/ECS-project/ECS-project/webapp/target
 
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: war-file
        path: ./artifact
 
    - name: List build directory contents
      run: ls -la /home/runner/work/ECS-project/ECS-project/artifact

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        docker build -t githubproject .
        docker tag githubproject:latest 841515711664.dkr.ecr.ap-south-1.amazonaws.com/githubproject:latest
 
    - name: Push Docker image to ECR
      run: |
         docker push 841515711664.dkr.ecr.ap-south-1.amazonaws.com/githubproject:latest

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
          task-definition: ecs-deployment.json
          container-name: ecs-container
          image: ${{ steps.build-image.outputs.image }}    
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ecs-service
          cluster: ecs-cluster
          wait-for-service-stability: true
    
   
        
  
